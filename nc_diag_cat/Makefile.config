# NetCDF Diag Read Library
# Build configuration for nc_diag_cat
# --------------------------------------------------------------------
# You should modify this file to set up the proper build configuration
# for nc_diag_cat!
# --------------------------------------------------------------------
# Usage:
#     All you have to do is modify this file, and then build by using
#     "make"! You may add to this file, but NOT remove. Variables
#     that exist now should NOT be removed!
#     
#     Again, you may add your own variables to supplement the
#     build - but remember that we will be using our own NCDC_*
#     varables to build, so make sure your variables make it into our
#     NCDC_* variables!
#

# NCDC_FORT90C - Fortran 90 compiler
#   Specify the Fortran 90 compiler to use to compile nc_diag_cat.
NCDC_FORT90C=ifort

# NCDC_F90FLAGS - Fortran 90 compiler flags
#   Specify the Fortran 90 compiler flags to use to compile
#   nc_diag_cat. Any flags can be specified here, including
#   optimization flags that you may use in your programs.
NCDC_F90FLAGS+=


# NCDC_NETCDF_FLAGS - nc_diag_cat NetCDF flags
#   Specify the required flags to compile nc_diag_cat with NetCDF, a
#   required dependency. This should include the necessary include
#   files, as well as the correct linking directories and flags for
#   linking with NetCDF.
NCDC_NETCDF_FLAGS+=-I$(BASEDIR)/Linux/include/netcdf -L$(BASEDIR)/Linux/lib \
    -lnetcdff -lnetcdf -lhdf5 -lcurl -lz -lrt -lmpi -lhdf5_hl -lhdf5 \
    -lz -lsz -lgpfs -lmfhdf -ldf -ljpeg

# NCDC_CONFIG_FLAGS - nc_diag_cat compile-time configuration flags
#   Specify nc_diag_cat-specific options via compile-time flags.
#   
#   Available compile-time configuration flags:
#     -D_REAL8_          - define the default "real" number
#                          (other kinds defines available!)
#     -D_DEBUG_MEM_      - enable verbose memory debugging messages.
#                          WARNING - this is a LOT of messages!
#     -DQUIET            - silence most (if not all) verbose output from
#                          nc_diag_cat. This include info messages. Note
#                          that this does NOT silence error or warning
#                          messages.
#     -DANSI_TERM_COLORS - enable terminal colors for warning and error
#                          messages.
#     -DERROR_TRACEBACK  - enable a traceback on error. This is useful for
#                          debugging any issues with code or NCLayer.
#                          This works by triggering a divide-by-zero
#                          runtime error, which generates a traceback.
NCDC_CONFIG_FLAGS+=-D_REAL8_ -DANSI_TERM_COLORS -DERROR_TRACEBACK -DQUIET

# NCDC_MAKE_ENABLE_FANCY_ANSI - fun little tongue twister that enables
# (or disables) fancy, colorful printing for nc_diag_cat building.
NCDC_MAKE_ENABLE_FANCY_ANSI=1

# NCDC_NCDC_USE_MPI - should nc_diag_cat use MPI or not?
NCDC_USE_MPI=1

#######################################################################
# Don't change anything below!
#######################################################################

# MPI flags
ifeq ($(NCDC_USE_MPI), 1)
	NCDC_FORT90C=mpif90
	NCDC_CONFIG_FLAGS+=-DUSE_MPI
	NC_DIAG_CAT_DEPS+=ncdc_data_MPI.mod
	NC_DIAG_CAT_OBJS+=ncdc_data_MPI.o
else
	NC_DIAG_CAT_DEPS+=ncdc_data.mod
	NC_DIAG_CAT_OBJS+=ncdc_data.o
	NCDC_FORT90C=ifort
endif

# Fancy ANSI Makefile... oooh, fancy
ifeq ($(NCDC_MAKE_ENABLE_FANCY_ANSI), 1)
	NCDC_MAKE_FANCY_BEGIN = @printf "\033[1m\033[34m ** Building $< => $@|.o...\033[0m\n"
	NCDC_MAKE_QUIET = @
	NCDC_MAKE_FANCY_END = @printf "\033[F\r\033[32m ** Building $< => $@|.o... done!\033[0m\n"
	
	NCDC_MAKE_FANCY_BIGLIB_BEGIN = @printf "\033[1m\033[34m ** Building $@...\033[0m\n"
	NCDC_MAKE_FANCY_BIGLIB_END = @printf "\033[F\r\033[32m ** Building $@... done!\033[0m\n"
else
	NCDC_MAKE_FANCY_BEGIN = 
	NCDC_MAKE_QUIET = 
	NCDC_MAKE_FANCY_END = 
	NCDC_MAKE_FANCY_BIGLIB_BEGIN = 
	NCDC_MAKE_FANCY_BIGLIB_END = 
endif

# Debug setup
ifndef NCDC_DEBUG
    NCDC_DEBUG=0
endif

# Debug flags
ifeq ($(NCDC_DEBUG), 1)
    NCDC_F90FLAGS+=-O0 -fpp -g -pg -check all \
        -ftrapuv -debug all -fpe0 -warn all -traceback -debug extended
endif
